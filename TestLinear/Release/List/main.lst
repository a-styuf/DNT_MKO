*******************************************************************************
*                                                                             *
*              K1874BE96T C CROSS COMPILER Version 2.00.150328                *
*                          Copyright (C) 2012 NIIET                           *
*                                                                             *
*******************************************************************************

                        main:
;FILE: .\TestLinear\main.c
;000047    void main()
;000049        UART_Init();
00000000    EFFDFF                         	LCALL UART_Init
;000050        ADC_Init();
00000003    EFFAFF                         	LCALL ADC_Init
;000051        PWM_Init();
00000006    EFF7FF                         	LCALL PWM_Init
;000052        Timer_Init();
00000009    EFF4FF                         	LCALL Timer_Init
;000053        MKO_UD_Init();
0000000C    EFF1FF                         	LCALL MKO_UD_Init
;000054        IOPORT1 = 0x00;
0000000F    1100                           	CLRB  IOPORT1
;000055        TIMER_10MS = 100;
00000011    AD641C                         	LDBZE _AX,#64h
00000014    C30100001C                     	ST    _AX,TIMER_10MS
;000056        SBUF_TX1 = 0x01;
00000019    B1011C                         	LDB   _AL,#01h
0000001C    C70100001C                     	STB   _AL,SBUF_TX1
;000058        memset(u16_buff, 0xFA, 64);
00000021    A102001C                       	LD    _AX,#u16_buff
00000025    ADFA1E                         	LDBZE _BX,#0FAh
00000028    AD4020                         	LDBZE _CX,#40h
0000002B    EFD2FF                         	LCALL memset
;000059        MKO_data_to_transmit(u16_buff, 30);
0000002E    A102001C                       	LD    _AX,#u16_buff
00000032    B11E1E                         	LDB   _BL,#1Eh
00000035    EFC8FF                         	LCALL MKO_data_to_transmit
;000060        MKO_receive_data_change(u16_buff, 29);
00000038    A102001C                       	LD    _AX,#u16_buff
0000003C    B11D1E                         	LDB   _BL,#1Dh
0000003F    EFBEFF                         	LCALL MKO_receive_data_change
;000062        DNT_Parameters_Init(&dnt, MEAS_LENG_S, DEAD_TIME_MS, MODE);
00000042    A100001C                       	LD    _AX,#dnt
00000046    AD011E                         	LDBZE _BX,#01h
00000049    AD6420                         	LDBZE _CX,#64h
0000004C    AD0222                         	LDBZE _DX,#02h
0000004F    EFAEFF                         	LCALL DNT_Parameters_Init
;000063        DNT_Frame_Definer_Init(&dnt, DEVICE_TYPE, ZAV_NUMBER);
00000052    A100001C                       	LD    _AX,#dnt
00000056    B1021E                         	LDB   _BL,#02h
00000059    B10B1F                         	LDB   _BH,#0Bh
0000005C    EFA1FF                         	LCALL DNT_Frame_Definer_Init
;000064        DNT_Frame_Init(&dnt_data_frame, &dnt);
0000005F    A100001C                       	LD    _AX,#dnt_data_frame
00000063    A100001E                       	LD    _BX,#dnt
00000067    EF96FF                         	LCALL DNT_Frame_Init
;000067        while(1)
                     ??_1_DO:
;000068        {
;000069            if (Timer10ms_Flag() == 1)
0000006A    EF93FF                         	LCALL Timer10ms_Flag
0000006D    99011C                         	CMPB  _AL,#01h
00000070    DF02                           	JE    ??_2_ELSE_BYPASS_70
00000072    20B3                           	SJMP  ??_2_ELSE
         ??_2_ELSE_BYPASS_70:
;000070            {
;000071                TIMER_10MS = 1;
00000074    AD011C                         	LDBZE _AX,#01h
00000077    C30100001C                     	ST    _AX,TIMER_10MS
;000072                if (mko_activity_timeout != 0) {
0000007C    B30100001C                     	LDB   _AL,mko_activity_timeout
00000081    98001C                         	CMPB  _AL,0
00000084    DF09                           	JE    ??_3_ELSE
;000073                    mko_activity_timeout--; //необходимо делать паузы, что бы МКО не вносило помехи в измерения
00000086    151C                           	DECB  _AL
00000088    C70100001C                     	STB   _AL,mko_activity_timeout
;000074                }
0000008D    2025                           	SJMP  ??_3_END
                   ??_3_ELSE:
;000075                else{
;000076                    if (Current_Calc_Step_10ms(&dnt)) {// производим итеративный подсчет тока, по окончанию выкладываемвсе данные на подадрес МПИ
0000008F    A100001C                       	LD    _AX,#dnt
00000093    EF6AFF                         	LCALL Current_Calc_Step_10ms
00000096    98001C                         	CMPB  _AL,0
00000099    DF0B                           	JE    ??_4_ELSE
;000077                        DNT_Frame_Create(&dnt_data_frame, &dnt);
0000009B    A100001C                       	LD    _AX,#dnt_data_frame
0000009F    A100001E                       	LD    _BX,#dnt
000000A3    EF5AFF                         	LCALL DNT_Frame_Create
;000078                    }
                   ??_4_ELSE:
;000079                    Grid_Voltage_Calc_Step_10ms(&dnt);
000000A6    A100001C                       	LD    _AX,#dnt
000000AA    EF53FF                         	LCALL Grid_Voltage_Calc_Step_10ms
;000080                    Temp_Calc_Step_10ms(&dnt);
000000AD    A100001C                       	LD    _AX,#dnt
000000B1    EF4CFF                         	LCALL Temp_Calc_Step_10ms
;000081                }
                    ??_3_END:
;000083                if ((mko_read_flag != 0) && (dnt.control.measure_cycle_time_ms == 0)){ //проверяем есть ли команда на запись по МКО и закончился ли цикл измерения, если все есть, перезаписываем параметры ДНТ
000000B4    B30100001C                     	LDB   _AL,mko_read_flag
000000B9    98001C                         	CMPB  _AL,0
000000BC    DF69                           	JE    ??_5_ELSE
000000BE    A301B40020                     	LD    _CX,(dnt+0B4h)
000000C3    A301B60022                     	LD    _DX,(dnt+0B6h)
000000C8    011C                           	CLR   _AX
000000CA    011E                           	CLR   _BX
000000CC    C51C20                         	CMPL  _DCX,_BAX
000000CF    D756                           	JNE   ??_5_ELSE
;000084                    mko_read_flag = 0;
000000D1    C701000000                     	STB   00h,mko_read_flag
;000085                    Update_DNT_Prameters_from_MKO(&dnt);
000000D6    A100001C                       	LD    _AX,#dnt
000000DA    EF23FF                         	LCALL Update_DNT_Prameters_from_MKO
;000087                    MKO_get_data_from_transmit_subaddr(u16_buff, 0x1D);
000000DD    A102001C                       	LD    _AX,#u16_buff
000000E1    B11D1E                         	LDB   _BL,#1Dh
000000E4    EF19FF                         	LCALL MKO_get_data_from_transmit_subaddr
;000088                    uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 32);
000000E7    A102001C                       	LD    _AX,#u16_buff
000000EB    A1C2001E                       	LD    _BX,#com_data
000000EF    B12020                         	LDB   _CL,#20h
000000F2    EF0BFF                         	LCALL uint16_buffer_rev_to_uint8_buffer
;000089                    leng = COMAnsForm(req_id, ID, 0x00, &seq_num, 0x1D, 64, com_data, answer);
000000F5    C94200                         	PUSH  #answer
000000F8    C9C200                         	PUSH  #com_data
000000FB    B30103011C                     	LDB   _AL,req_id
00000100    B1F01D                         	LDB   _AH,#0F0h
00000103    111E                           	CLRB  _BL
00000105    A1840120                       	LD    _CX,#seq_num
00000109    B11D22                         	LDB   _DL,#1Dh
0000010C    B14023                         	LDB   _DH,#40h
0000010F    EFEEFE                         	LCALL COMAnsForm
00000112    65040018                       	ADD   _SP,#0004h
00000116    C70102011C                     	STB   _AL,leng
;000090                    UART1_TX(answer, leng);
0000011B    A142001C                       	LD    _AX,#answer
0000011F    B30102011E                     	LDB   _BL,leng
00000124    EFD9FE                         	LCALL UART1_TX
;000091                }
                   ??_5_ELSE:
;000092            }
                   ??_2_ELSE:
;000095            if((leng = UART1_RX(request)) != 0)
00000127    A104011C                       	LD    _AX,#request
0000012B    EFD2FE                         	LCALL UART1_RX
0000012E    C70102011C                     	STB   _AL,leng
00000133    98001C                         	CMPB  _AL,0
00000136    D702                           	JNE   ??_1_DO_BYPASS_136
00000138    2730                           	SJMP  ??_1_DO
          ??_1_DO_BYPASS_136:
;000096            {
;000097                if (request[0] == ID)
0000013A    B30104011C                     	LDB   _AL,request
0000013F    99F01C                         	CMPB  _AL,#0F0h
00000142    DF02                           	JE    ??_1_DO_BYPASS_142
00000144    2724                           	SJMP  ??_1_DO
          ??_1_DO_BYPASS_142:
;000098                {
;000099                    if(request[4] == 0x00) // тестовая команда, дающая простой ответ от ДНТ (удобно использовать для проверки связи)
00000146    B301080122                     	LDB   _DL,(request+4)
0000014B    980022                         	CMPB  _DL,0
0000014E    D71B                           	JNE   ??_9_ELSE
;000100                    {
;000101                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 0, com_data, answer);
00000150    C94200                         	PUSH  #answer
00000153    C9C200                         	PUSH  #com_data
00000156    B30103011C                     	LDB   _AL,req_id
0000015B    B1F01D                         	LDB   _AH,#0F0h
0000015E    B30106011E                     	LDB   _BL,(request+2)
00000163    A1840120                       	LD    _CX,#seq_num
00000167    1123                           	CLRB  _DH
;000102                        UART1_TX(answer, leng);
;000103                    }
00000169    2147                           	SJMP  ??_19_COMMON
                   ??_9_ELSE:
;000104                    else if(request[4] == 0x01)// команда для чтения тока
0000016B    990122                         	CMPB  _DL,#01h
0000016E    D757                           	JNE   ??_10_ELSE
;000105                    {
;000106                        u16_buff[0] = dnt.current_result;
00000170    A30106001C                     	LD    _AX,(dnt+6)
00000175    C30102001C                     	ST    _AX,u16_buff
;000107                        u16_buff[1] = dnt.signal.value;
0000017A    A30110001C                     	LD    _AX,(dnt+16)
0000017F    C30104001C                     	ST    _AX,(u16_buff+2)
;000108                        u16_buff[2] = dnt.zero.value;
00000184    A30154001C                     	LD    _AX,(dnt+84)
00000189    C30106001C                     	ST    _AX,(u16_buff+4)
;000109                        u16_buff[3] = dnt.control.ku;
0000018E    A301B2001C                     	LD    _AX,(dnt+0B2h)
00000193    C30108001C                     	ST    _AX,(u16_buff+6)
;000110                        uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 4);
00000198    A102001C                       	LD    _AX,#u16_buff
0000019C    A1C2001E                       	LD    _BX,#com_data
000001A0    B10420                         	LDB   _CL,#04h
000001A3    EF5AFE                         	LCALL uint16_buffer_rev_to_uint8_buffer
;000111                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 8, com_data, answer);
000001A6    C94200                         	PUSH  #answer
000001A9    C9C200                         	PUSH  #com_data
000001AC    B30103011C                     	LDB   _AL,req_id
000001B1    B1F01D                         	LDB   _AH,#0F0h
000001B4    B30106011E                     	LDB   _BL,(request+2)
000001B9    A1840120                       	LD    _CX,#seq_num
000001BD    B301080122                     	LDB   _DL,(request+4)
000001C2    B10823                         	LDB   _DH,#08h
;000112                        UART1_TX(answer, leng);
;000113                    }
000001C5    20EB                           	SJMP  ??_20_COMMON
                  ??_10_ELSE:
;000114                    else if(request[4] == 0x02)// команда для чтения показаний температурного датчика
000001C7    990222                         	CMPB  _DL,#02h
000001CA    D707                           	JNE   ??_11_ELSE
;000115                    {
;000116                        u16_buff[0] = dnt.temperature.value;
000001CC    A301A0001C                     	LD    _AX,(dnt+0A0h)
;000117                        uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 1);
;000118                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 2, com_data, answer);
;000119                        UART1_TX(answer, leng);
;000120                    }
000001D1    200A                           	SJMP  ??_21_COMMON
                  ??_11_ELSE:
;000121                    else if(request[4] == 0x03)// команда для чтения сводной информации по генератору -50В
000001D3    990322                         	CMPB  _DL,#03h
000001D6    D739                           	JNE   ??_12_ELSE
;000122                    {
;000123                        u16_buff[0] = dnt.shut_off_grid.value;
000001D8    A30194001C                     	LD    _AX,(dnt+94h)
                ??_21_COMMON:
000001DD    C30102001C                     	ST    _AX,u16_buff
;000124                        uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 1);
000001E2    A102001C                       	LD    _AX,#u16_buff
000001E6    A1C2001E                       	LD    _BX,#com_data
000001EA    B10120                         	LDB   _CL,#01h
000001ED    EF10FE                         	LCALL uint16_buffer_rev_to_uint8_buffer
;000125                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 2, com_data, answer);
000001F0    C94200                         	PUSH  #answer
000001F3    C9C200                         	PUSH  #com_data
000001F6    B30103011C                     	LDB   _AL,req_id
000001FB    B1F01D                         	LDB   _AH,#0F0h
000001FE    B30106011E                     	LDB   _BL,(request+2)
00000203    A1840120                       	LD    _CX,#seq_num
00000207    B301080122                     	LDB   _DL,(request+4)
0000020C    B10223                         	LDB   _DH,#02h
;000126                        UART1_TX(answer, leng);
;000127                    }
0000020F    20A1                           	SJMP  ??_22_COMMON
                  ??_12_ELSE:
;000128                    else if(request[4] == 0x04)// вычитывание параметров dnt из структуры
00000211    990422                         	CMPB  _DL,#04h
00000214    D710                           	JNE   ??_13_ELSE
;000129                    {
;000130                        memcpy((uint8_t*)u16_buff, (uint8_t*)&dnt, 64);
00000216    A102001C                       	LD    _AX,#u16_buff
0000021A    A100001E                       	LD    _BX,#dnt
0000021E    AD4020                         	LDBZE _CX,#40h
00000221    EFDCFD                         	LCALL memcpy
;000131                        uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 32);
;000132                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 64, com_data, answer);
;000133                        UART1_TX(answer, leng);
;000134                    }
00000224    2014                           	SJMP  ??_23_COMMON
                  ??_13_ELSE:
;000135                    else if(request[4] == 0x05)// команда для чтения данных с задаваемого ПА МКО
00000226    990522                         	CMPB  _DL,#05h
00000229    D73E                           	JNE   ??_14_ELSE
;000136                    {
;000137                        MKO_get_data_from_transmit_subaddr(u16_buff, request[6]&0x1F);
0000022B    B3010A011E                     	LDB   _BL,(request+6)
00000230    711F1E                         	ANDB  _BL,#1Fh
00000233    A102001C                       	LD    _AX,#u16_buff
00000237    EFC6FD                         	LCALL MKO_get_data_from_transmit_subaddr
;000138                        uint16_buffer_rev_to_uint8_buffer(u16_buff, com_data, 32);
                ??_23_COMMON:
0000023A    A102001C                       	LD    _AX,#u16_buff
0000023E    A1C2001E                       	LD    _BX,#com_data
00000242    B12020                         	LDB   _CL,#20h
00000245    EFB8FD                         	LCALL uint16_buffer_rev_to_uint8_buffer
;000139                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 64, com_data, answer);
00000248    C94200                         	PUSH  #answer
0000024B    C9C200                         	PUSH  #com_data
0000024E    B30103011C                     	LDB   _AL,req_id
00000253    B1F01D                         	LDB   _AH,#0F0h
00000256    B30106011E                     	LDB   _BL,(request+2)
0000025B    A1840120                       	LD    _CX,#seq_num
0000025F    B301080122                     	LDB   _DL,(request+4)
00000264    B14023                         	LDB   _DH,#40h
;000140                        UART1_TX(answer, leng);
;000141                    }
00000267    2049                           	SJMP  ??_24_COMMON
                  ??_14_ELSE:
;000142                    else if(request[4] == 0xF1)// управление режимом
00000269    99F122                         	CMPB  _DL,#0F1h
0000026C    D75E                           	JNE   ??_15_ELSE
;000143                    {
;000144                        dnt.control.mode = request[6];
0000026E    AF010A011C                     	LDBZE _AX,(request+6)
00000273    C301AC001C                     	ST    _AX,(dnt+0ACh)
;000145                        dnt.control.measure_leng_s = request[7];
00000278    AF010B011C                     	LDBZE _AX,(request+7)
0000027D    C301AE001C                     	ST    _AX,(dnt+0AEh)
;000146                        dnt.control.dead_time_ms = request[8];
00000282    AF010C011C                     	LDBZE _AX,(request+8)
00000287    C301B0001C                     	ST    _AX,(dnt+0B0h)
;000147                        Update_MKO_from_DNT_Parameters(&dnt);
0000028C    A100001C                       	LD    _AX,#dnt
00000290    EF6DFD                         	LCALL Update_MKO_from_DNT_Parameters
;000148                        leng = COMAnsForm(req_id, ID, request[2], &seq_num, request[4], 3, &request[6], answer);
00000293    C94200                         	PUSH  #answer
00000296    C90A01                         	PUSH  #(request+6)
00000299    B30103011C                     	LDB   _AL,req_id
0000029E    B1F01D                         	LDB   _AH,#0F0h
000002A1    B30106011E                     	LDB   _BL,(request+2)
000002A6    A1840120                       	LD    _CX,#seq_num
000002AA    B301080122                     	LDB   _DL,(request+4)
000002AF    B10323                         	LDB   _DH,#03h
                ??_19_COMMON:
                ??_20_COMMON:
                ??_22_COMMON:
                ??_24_COMMON:
000002B2    EF4BFD                         	LCALL COMAnsForm
000002B5    65040018                       	ADD   _SP,#0004h
000002B9    C70102011C                     	STB   _AL,leng
;000149                        UART1_TX(answer, leng);
000002BE    A142001C                       	LD    _AX,#answer
000002C2    B30102011E                     	LDB   _BL,leng
000002C7    EF36FD                         	LCALL UART1_TX
;000150                    }
000002CA    259E                           	SJMP  ??_1_DO
                  ??_15_ELSE:
;000151                    else if(request[4] == 0xFF)// запуск и вычитываник осциллограммы
000002CC    99FF22                         	CMPB  _DL,#0FFh
000002CF    DF02                           	JE    ??_1_DO_BYPASS_2CF
000002D1    2597                           	SJMP  ??_1_DO
          ??_1_DO_BYPASS_2CF:
;000152                    {
;000154                        seq_num++;
000002D3    B30184011C                     	LDB   _AL,seq_num
000002D8    171C                           	INCB  _AL
000002DA    C70184011C                     	STB   _AL,seq_num
;000155                        Oscilloscope(request[6], request[7], dnt.control.dead_time_ms/10);
000002DF    A301B00020                     	LD    _CX,(dnt+0B0h)
000002E4    0122                           	CLR   _DX
000002E6    8D0A0020                       	DIVU  _DCX,#000Ah
000002EA    AF010B011E                     	LDBZE _BX,(request+7)
000002EF    AF010A011C                     	LDBZE _AX,(request+6)
000002F4    EF09FD                         	LCALL Oscilloscope
;000156                        answer[0] = 0x00;
000002F7    C701420000                     	STB   00h,answer
;000157                        answer[1] = 0xF0;
000002FC    B1F01C                         	LDB   _AL,#0F0h
000002FF    C70143001C                     	STB   _AL,(answer+1)
;000158                        answer[2] = 0x00;
00000304    C701440000                     	STB   00h,(answer+2)
;000159                        answer[3] = seq_num&0xFF;
00000309    B30184011C                     	LDB   _AL,seq_num
0000030E    C70145001C                     	STB   _AL,(answer+3)
;000160                        answer[4] = 0xF3;
00000313    B1F31C                         	LDB   _AL,#0F3h
00000316    C70146001C                     	STB   _AL,(answer+4)
;000161                        answer[5] = 0xFF;
0000031B    B1FF1C                         	LDB   _AL,#0FFh
0000031E    C70147001C                     	STB   _AL,(answer+5)
;000162                        UART1_TX(answer, 0x06);
00000323    A142001C                       	LD    _AX,#answer
00000327    B1061E                         	LDB   _BL,#06h
0000032A    EFD3FC                         	LCALL UART1_TX
;000163                        TIMER_10MS = 10;
0000032D    AD0A1C                         	LDBZE _AX,#0Ah
00000330    C30100001C                     	ST    _AX,TIMER_10MS
;000164                        for(i=0; i<512; i++)
00000335    C301000000                     	ST    00h,i
0000033A    204D                           	SJMP  ??_17_CHECK
                  ??_17_LOOP:
;000165                        {
;000166                            answer[0] = ((*(MKO_tr_data + 32 + i))>>8)&0xFF;
0000033C    09011C                         	SHL   _AX,#01h
0000033F    670100001C                     	ADD   _AX,MKO_tr_data
00000344    B31C411C                       	LDB   _AL,41h[_AX]
00000348    C70142001C                     	STB   _AL,answer
;000167                            answer[1] = ((*(MKO_tr_data + 32 + i))>>0)&0xFF;
0000034D    A30100001C                     	LD    _AX,i
00000352    09011C                         	SHL   _AX,#01h
00000355    670100001C                     	ADD   _AX,MKO_tr_data
0000035A    B31C401C                       	LDB   _AL,40h[_AX]
0000035E    C70143001C                     	STB   _AL,(answer+1)
;000168                            while (Timer10ms_Flag() != 1);
                    ??_18_DO:
00000363    EF9AFC                         	LCALL Timer10ms_Flag
00000366    99011C                         	CMPB  _AL,#01h
00000369    D7F8                           	JNE   ??_18_DO
;000169                            UART1_TX(answer, 0x02);
0000036B    A142001C                       	LD    _AX,#answer
0000036F    B1021E                         	LDB   _BL,#02h
00000372    EF8BFC                         	LCALL UART1_TX
;000170                            TIMER_10MS = 1;
00000375    AD011C                         	LDBZE _AX,#01h
00000378    C30100001C                     	ST    _AX,TIMER_10MS
;000171                        }
0000037D    A30100001C                     	LD    _AX,i
00000382    071C                           	INC   _AX
00000384    C30100001C                     	ST    _AX,i
                 ??_17_CHECK:
00000389    A30100001C                     	LD    _AX,i
0000038E    8900021C                       	CMP   _AX,#0200h
00000392    D3A8                           	JNC   ??_17_LOOP
;000172                    }
;000173                }
;000174            }
;000175        }
00000394    24D4                           	SJMP  ??_1_DO
;000176    }
.ENDF

.\TestLinear\main.c: 918 byte(s), 3227 line(s), 0 error(s), 0 warning(s)

